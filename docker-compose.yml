version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:14-alpine
    container_name: debaide_db
    environment:
      POSTGRES_DB: debaide
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: debaide_backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/debaide
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      API_BASE_URL: http://localhost:8000
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - audio_storage:/app/storage/audio
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Adminer - Database Management UI
  adminer:
    image: adminer:latest
    container_name: debaide_adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
    depends_on:
      - db

volumes:
  postgres_data:
  audio_storage:
